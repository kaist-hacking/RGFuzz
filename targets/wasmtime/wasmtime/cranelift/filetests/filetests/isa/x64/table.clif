test compile precise-output
set enable_safepoints=true
set enable_table_access_spectre_mitigation=true

target x86_64

function %table_set(i32, r64, i64 vmctx) {
    gv0 = vmctx
    gv1 = load.i64 notrap aligned gv0
    gv2 = load.i32 notrap aligned gv0 +8
    table0 = dynamic gv1, element_size 1, bound gv2, index_type i32

block0(v0: i32, v1: r64, v2: i64):
    v3 = table_addr.i64 table0, v0+0
    store.r64 notrap aligned v1, v3
    return
}

; VCode:
;   pushq   %rbp
;   movq    %rsp, %rbp
; block0:
;   movl    8(%rdx), %r11d
;   cmpl    %r11d, %edi
;   jnb     label2; j label1
; block1:
;   movl    %edi, %ecx
;   movq    0(%rdx), %rax
;   lea     0(%rax,%rcx,1), %rcx
;   cmpl    %r11d, %edi
;   cmovnbq %rax, %rcx, %rcx
;   movq    %rsi, 0(%rcx)
;   movq    %rbp, %rsp
;   popq    %rbp
;   ret
; block2:
;   ud2 table_oob
;
; Disassembled:
; block0: ; offset 0x0
;   pushq %rbp
;   movq %rsp, %rbp
; block1: ; offset 0x4
;   movl 8(%rdx), %r11d
;   cmpl %r11d, %edi
;   jae 0x28
; block2: ; offset 0x11
;   movl %edi, %ecx
;   movq (%rdx), %rax
;   addq %rax, %rcx
;   cmpl %r11d, %edi
;   cmovaeq %rax, %rcx
;   movq %rsi, (%rcx)
;   movq %rbp, %rsp
;   popq %rbp
;   retq
; block3: ; offset 0x28
;   ud2 ; trap: table_oob

