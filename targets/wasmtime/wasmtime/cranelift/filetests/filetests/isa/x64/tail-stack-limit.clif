test compile precise-output
set enable_llvm_abi_extensions=true
target x86_64

;; The stack-limit checking code should not clobber the `i128`'s argument
;; registers.

function %a(i64 vmctx, i8, i8, i8, i8, i8, i8, i8, i128) -> i128 tail {
    gv0 = vmctx
    stack_limit = gv0

    ;; Need a stack slot to actually emit the stack-limit checking code.
    ss0 = explicit_slot 8

block0(v0: i64, v1: i8, v2: i8, v3: i8, v4: i8, v5: i8, v6: i8, v7: i8, v8: i128):
    return v8
}

; VCode:
;   pushq   %rbp
;   movq    %rsp, %rbp
;   movq    %rax, %r14
;   addq    %r14, $16, %r14
;   cmpq    %rsp, %r14
;   jnbe #trap=stk_ovf
;   subq    %rsp, $16, %rsp
; block0:
;   movq    %r10, %rax
;   movq    %r11, %rcx
;   addq    %rsp, $16, %rsp
;   movq    %rbp, %rsp
;   popq    %rbp
;   ret
;
; Disassembled:
; block0: ; offset 0x0
;   pushq %rbp
;   movq %rsp, %rbp
;   movq %rax, %r14
;   addq $0x10, %r14
;   cmpq %rsp, %r14
;   ja 0x27
;   subq $0x10, %rsp
; block1: ; offset 0x18
;   movq %r10, %rax
;   movq %r11, %rcx
;   addq $0x10, %rsp
;   movq %rbp, %rsp
;   popq %rbp
;   retq
;   ud2 ; trap: stk_ovf
