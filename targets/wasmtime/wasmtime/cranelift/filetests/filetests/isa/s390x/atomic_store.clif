test compile precise-output
target s390x

function %atomic_store_i64(i64, i64) {
block0(v0: i64, v1: i64):
  atomic_store.i64 v0, v1
  return
}

; VCode:
; block0:
;   stg %r2, 0(%r3)
;   bcr 14, 0
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   stg %r2, 0(%r3)
;   bnor %r0
;   br %r14

function %atomic_store_i64_sym(i64) {
  gv0 = symbol colocated %sym
block0(v0: i64):
  v1 = symbol_value.i64 gv0
  atomic_store.i64 aligned v0, v1
  return
}

; VCode:
; block0:
;   stgrl %r2, %sym + 0
;   bcr 14, 0
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   stgrl %r2, 0 ; reloc_external PCRel32Dbl %sym 2
;   bnor %r0
;   br %r14

function %atomic_store_imm_i64(i64) {
block0(v0: i64):
  v1 = iconst.i64 12345
  atomic_store.i64 v1, v0
  return
}

; VCode:
; block0:
;   mvghi 0(%r2), 12345
;   bcr 14, 0
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   mvghi 0(%r2), 0x3039
;   bnor %r0
;   br %r14

function %atomic_store_i32(i32, i64) {
block0(v0: i32, v1: i64):
  atomic_store.i32 v0, v1
  return
}

; VCode:
; block0:
;   st %r2, 0(%r3)
;   bcr 14, 0
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   st %r2, 0(%r3)
;   bnor %r0
;   br %r14

function %atomic_store_i32_sym(i32) {
  gv0 = symbol colocated %sym
block0(v0: i32):
  v1 = symbol_value.i64 gv0
  atomic_store.i32 aligned v0, v1
  return
}

; VCode:
; block0:
;   strl %r2, %sym + 0
;   bcr 14, 0
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   strl %r2, 0 ; reloc_external PCRel32Dbl %sym 2
;   bnor %r0
;   br %r14

function %atomic_store_imm_i32(i64) {
block0(v0: i64):
  v1 = iconst.i32 12345
  atomic_store.i32 v1, v0
  return
}

; VCode:
; block0:
;   mvhi 0(%r2), 12345
;   bcr 14, 0
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   mvhi 0(%r2), 0x3039
;   bnor %r0
;   br %r14

function %atomic_store_i16(i16, i64) {
block0(v0: i16, v1: i64):
  atomic_store.i16 v0, v1
  return
}

; VCode:
; block0:
;   sth %r2, 0(%r3)
;   bcr 14, 0
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   sth %r2, 0(%r3)
;   bnor %r0
;   br %r14

function %atomic_store_i16_sym(i16) {
  gv0 = symbol colocated %sym
block0(v0: i16):
  v1 = symbol_value.i64 gv0
  atomic_store.i16 aligned v0, v1
  return
}

; VCode:
; block0:
;   sthrl %r2, %sym + 0
;   bcr 14, 0
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   sthrl %r2, 0 ; reloc_external PCRel32Dbl %sym 2
;   bnor %r0
;   br %r14

function %atomic_store_imm_i16(i64) {
block0(v0: i64):
  v1 = iconst.i16 12345
  atomic_store.i16 v1, v0
  return
}

; VCode:
; block0:
;   mvhhi 0(%r2), 12345
;   bcr 14, 0
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   mvhhi 0(%r2), 0x3039
;   bnor %r0
;   br %r14

function %atomic_store_i8(i8, i64) {
block0(v0: i8, v1: i64):
  atomic_store.i8 v0, v1
  return
}

; VCode:
; block0:
;   stc %r2, 0(%r3)
;   bcr 14, 0
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   stc %r2, 0(%r3)
;   bnor %r0
;   br %r14

function %atomic_store_imm_i8(i64) {
block0(v0: i64):
  v1 = iconst.i8 123
  atomic_store.i8 v1, v0
  return
}

; VCode:
; block0:
;   mvi 0(%r2), 123
;   bcr 14, 0
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   mvi 0(%r2), 0x7b
;   bnor %r0
;   br %r14

