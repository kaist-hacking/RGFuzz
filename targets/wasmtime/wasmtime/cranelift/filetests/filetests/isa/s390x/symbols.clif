test compile precise-output
target s390x

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; SYMBOL_VALUE
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

function %symbol_value() -> i64 {
  gv0 = symbol %my_global

block0:
  v0 = symbol_value.i64 gv0
  return v0
}

; VCode:
; block0:
;   bras %r1, 12 ; data %my_global + 0 ; lg %r2, 0(%r1)
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   bras %r1, 0xc
;   .byte 0x00, 0x00 ; reloc_external Abs8 %my_global 0
;   .byte 0x00, 0x00
;   .byte 0x00, 0x00
;   .byte 0x00, 0x00
;   lg %r2, 0(%r1)
;   br %r14

function %symbol_value_colocated() -> i64 {
  gv0 = symbol colocated %my_global_colo

block0:
  v0 = symbol_value.i64 gv0
  return v0
}

; VCode:
; block0:
;   larl %r2, %my_global_colo + 0
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   larl %r2, 0 ; reloc_external PCRel32Dbl %my_global_colo 2
;   br %r14

function %func_addr() -> i64 {
    fn0 = %my_func(i64) -> i64

block0:
    v0 = func_addr.i64 fn0
    return v0
}

; VCode:
; block0:
;   bras %r1, 12 ; data %my_func + 0 ; lg %r2, 0(%r1)
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   bras %r1, 0xc
;   .byte 0x00, 0x00 ; reloc_external Abs8 %my_func 0
;   .byte 0x00, 0x00
;   .byte 0x00, 0x00
;   .byte 0x00, 0x00
;   lg %r2, 0(%r1)
;   br %r14

function %func_addr_colocated() -> i64 {
    fn0 = colocated %my_func_colo(i64) -> i64

block0:
    v0 = func_addr.i64 fn0
    return v0
}

; VCode:
; block0:
;   larl %r2, %my_func_colo + 0
;   br %r14
;
; Disassembled:
; block0: ; offset 0x0
;   larl %r2, 0 ; reloc_external PCRel32Dbl %my_func_colo 2
;   br %r14

