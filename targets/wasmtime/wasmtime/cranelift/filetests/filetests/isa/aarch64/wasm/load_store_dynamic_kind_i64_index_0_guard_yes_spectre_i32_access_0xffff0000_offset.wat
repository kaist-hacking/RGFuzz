;;! target = "aarch64"
;;!
;;! settings = ['enable_heap_access_spectre_mitigation=true']
;;!
;;! compile = true
;;!
;;! [globals.vmctx]
;;! type = "i64"
;;! vmctx = true
;;!
;;! [globals.heap_base]
;;! type = "i64"
;;! load = { base = "vmctx", offset = 0, readonly = true }
;;!
;;! [globals.heap_bound]
;;! type = "i64"
;;! load = { base = "vmctx", offset = 8, readonly = true }
;;!
;;! [[heaps]]
;;! base = "heap_base"
;;! min_size = 0x10000
;;! offset_guard_size = 0
;;! index_type = "i64"
;;! style = { kind = "dynamic", bound = "heap_bound" }

;; !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
;; !!! GENERATED BY 'make-load-store-tests.sh' DO NOT EDIT !!!
;; !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

(module
  (memory i64 1)

  (func (export "do_store") (param i64 i32)
    local.get 0
    local.get 1
    i32.store offset=0xffff0000)

  (func (export "do_load") (param i64) (result i32)
    local.get 0
    i32.load offset=0xffff0000))

;; function u0:0:
;; block0:
;;   movn w12, #65531
;;   adds x12, x0, x12
;;   b.hs #trap=heap_oob
;;   ldr x13, [x2, #8]
;;   ldr x14, [x2]
;;   add x14, x14, x0
;;   movz x15, #65535, LSL #16
;;   add x14, x14, x15
;;   movz x15, #0
;;   subs xzr, x12, x13
;;   csel x14, x15, x14, hi
;;   csdb
;;   str w1, [x14]
;;   b label1
;; block1:
;;   ret
;;
;; function u0:1:
;; block0:
;;   movn w12, #65531
;;   adds x12, x0, x12
;;   b.hs #trap=heap_oob
;;   ldr x13, [x1, #8]
;;   ldr x14, [x1]
;;   add x14, x14, x0
;;   movz x15, #65535, LSL #16
;;   add x14, x14, x15
;;   movz x15, #0
;;   subs xzr, x12, x13
;;   csel x14, x15, x14, hi
;;   csdb
;;   ldr w0, [x14]
;;   b label1
;; block1:
;;   ret
