;;! target = "aarch64"
;;!
;;! settings = ['enable_heap_access_spectre_mitigation=true']
;;!
;;! compile = true
;;!
;;! [globals.vmctx]
;;! type = "i64"
;;! vmctx = true
;;!
;;! [globals.heap_base]
;;! type = "i64"
;;! load = { base = "vmctx", offset = 0, readonly = true }
;;!
;;! # (no heap_bound global for static heaps)
;;!
;;! [[heaps]]
;;! base = "heap_base"
;;! min_size = 0x10000
;;! offset_guard_size = 0
;;! index_type = "i32"
;;! style = { kind = "static", bound = 0x10000000 }

;; !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
;; !!! GENERATED BY 'make-load-store-tests.sh' DO NOT EDIT !!!
;; !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

(module
  (memory i32 1)

  (func (export "do_store") (param i32 i32)
    local.get 0
    local.get 1
    i32.store offset=0x1000)

  (func (export "do_load") (param i32) (result i32)
    local.get 0
    i32.load offset=0x1000))

;; function u0:0:
;; block0:
;;   mov w11, w0
;;   ldr x12, [x2]
;;   add x12, x12, x0, UXTW
;;   add x12, x12, #4096
;;   movz x13, #0
;;   movz w10, #61436
;;   movk w10, w10, #4095, LSL #16
;;   subs xzr, x11, x10
;;   csel x14, x13, x12, hi
;;   csdb
;;   str w1, [x14]
;;   b label1
;; block1:
;;   ret
;;
;; function u0:1:
;; block0:
;;   mov w11, w0
;;   ldr x12, [x1]
;;   add x12, x12, x0, UXTW
;;   add x12, x12, #4096
;;   movz x13, #0
;;   movz w10, #61436
;;   movk w10, w10, #4095, LSL #16
;;   subs xzr, x11, x10
;;   csel x14, x13, x12, hi
;;   csdb
;;   ldr w0, [x14]
;;   b label1
;; block1:
;;   ret
